// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// corC
double corC(NumericVector x, NumericVector y);
RcppExport SEXP remote_corC(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    __result = Rcpp::wrap(corC(x, y));
    return __result;
END_RCPP
}
// lmC
List lmC(NumericVector x, NumericVector y);
RcppExport SEXP remote_lmC(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    __result = Rcpp::wrap(lmC(x, y));
    return __result;
END_RCPP
}
// predRsquaredSum
NumericVector predRsquaredSum(NumericMatrix pred_vals, NumericMatrix resp_vals, bool standardised);
RcppExport SEXP remote_predRsquaredSum(SEXP pred_valsSEXP, SEXP resp_valsSEXP, SEXP standardisedSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type pred_vals(pred_valsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type resp_vals(resp_valsSEXP);
    Rcpp::traits::input_parameter< bool >::type standardised(standardisedSEXP);
    __result = Rcpp::wrap(predRsquaredSum(pred_vals, resp_vals, standardised));
    return __result;
END_RCPP
}
// respLmParam
List respLmParam(NumericMatrix x, NumericMatrix y, int cell);
RcppExport SEXP remote_respLmParam(SEXP xSEXP, SEXP ySEXP, SEXP cellSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type cell(cellSEXP);
    __result = Rcpp::wrap(respLmParam(x, y, cell));
    return __result;
END_RCPP
}
// findudC
NumericVector findudC(NumericVector x);
RcppExport SEXP remote_findudC(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    __result = Rcpp::wrap(findudC(x));
    return __result;
END_RCPP
}
// iodaC
double iodaC(NumericVector x, NumericVector y);
RcppExport SEXP remote_iodaC(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    __result = Rcpp::wrap(iodaC(x, y));
    return __result;
END_RCPP
}
// iodaSumC
NumericVector iodaSumC(NumericMatrix pred_vals, NumericMatrix resp_vals);
RcppExport SEXP remote_iodaSumC(SEXP pred_valsSEXP, SEXP resp_valsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type pred_vals(pred_valsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type resp_vals(resp_valsSEXP);
    __result = Rcpp::wrap(iodaSumC(pred_vals, resp_vals));
    return __result;
END_RCPP
}
// seqC
NumericVector seqC(double start, double end, double by);
RcppExport SEXP remote_seqC(SEXP startSEXP, SEXP endSEXP, SEXP bySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type start(startSEXP);
    Rcpp::traits::input_parameter< double >::type end(endSEXP);
    Rcpp::traits::input_parameter< double >::type by(bySEXP);
    __result = Rcpp::wrap(seqC(start, end, by));
    return __result;
END_RCPP
}
// indexC
NumericVector indexC(NumericVector x, IntegerVector index, bool withinC);
RcppExport SEXP remote_indexC(SEXP xSEXP, SEXP indexSEXP, SEXP withinCSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type index(indexSEXP);
    Rcpp::traits::input_parameter< bool >::type withinC(withinCSEXP);
    __result = Rcpp::wrap(indexC(x, index, withinC));
    return __result;
END_RCPP
}
// monthlyMeansC
NumericMatrix monthlyMeansC(NumericMatrix x, int nCycleWindow);
RcppExport SEXP remote_monthlyMeansC(SEXP xSEXP, SEXP nCycleWindowSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type nCycleWindow(nCycleWindowSEXP);
    __result = Rcpp::wrap(monthlyMeansC(x, nCycleWindow));
    return __result;
END_RCPP
}
